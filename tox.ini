[tox]
envlist = py3{7,8,9,10,11}
skip_missing_interpreters = true
skipsdist = true

[testenv]
envdir = {toxinidir}/.env
skip_install = true
package_env = DUMMY NON-EXISTENT ENV NAME

# CHANGEME: app_name
# set the app name (directory) here and use it for paths
# use bionic for envs without the PPA backports
setenv =
    APP_DIR=app_name

passenv =
    CC
    CXX
    LD
    AR
    NM
    pythonLocation
    CI
    GITHUB*
    PYTHONIOENCODING
    PIP_DOWNLOAD_CACHE

allowlist_externals =
    {tests,clang,ctest,bionic,lint,clean,cover,format}: bash
    coverage: tox

changedir =
    {tests,clang,bionic}: build

deps =
    {tests,clang,ctest,bionic,lint,cover}: pip>=19.0.1
    {tests,clang,ctest,bionic}: cmake
    {tests,clang,ctest,bionic}: ninja
    {tests,clang,bionic}: gcovr
    format: clang-format
    cover: gcovr
    lint: cpplint

commands_pre =
    {tests,clang,bionic}: cmake -E make_directory {toxinidir}/build

commands =
    bionic: bash -c "cmake -DWITH_COVERAGE=1 -DCMAKE_BUILD_TYPE=Debug -DGOOGLETEST_SRC_DIR=/usr/src/googletest .."
    clang: bash -c "cmake -DCMAKE_TOOLCHAIN_FILE=../cmake/clang_toolchain.cmake .."
    tests: bash -c "cmake -DWITH_COVERAGE=1 -DCMAKE_BUILD_TYPE=Debug -DVERSION_FORMAT_DEV=1 .."
    {tests,clang,bionic}: bash -c "cmake --build . -j $(nproc)"
    {tests,bionic}: bash -c "make cov -j$(nproc)"
    {tests,bionic}: bash -c "gcovr -s -r {toxinidir} -e ../ext -e ../{env:APP_DIR}/test {env:APP_DIR}/"
    {tests,bionic}: bash -c "gcovr -r {toxinidir} --html --html-details -o {toxinidir}/coverage/coverage.html  -e ../ext -e ../{env:APP_DIR}/test {env:APP_DIR}/"
    ctest: bash -c 'ctest --build-generator {posargs:"Ninja"} --build-and-test . build --build-options -DCMAKE_BUILD_TYPE=Release --test-command ctest -V --timeout 15 --rerun-failed --output-on-failure'
    lint: bash -c "cpplint --output=gsed --recursive {env:APP_DIR}/src {env:APP_DIR}/include"
    cover: bash -c "gcovr --xml --xml-pretty -o {toxinidir}/coverage.xml -r . -e ext -e {env:APP_DIR}/test build/{env:APP_DIR}/"
    coverage: tox -e tests,cover
    format: bash -c "export FILES=$(find {env:APP_DIR}/src -name \*.h -o -name \*.cpp); clang-format -i {posargs} $FILES"
    clean: bash -c 'rm -rf build/ coverage/ coverage.xml coverage.info'

[testenv:changes]
skip_install = true
always_copy = False

allowlist_externals =
    {[testenv:handoff]allowlist_externals}

passenv =
    {[testenv:build]passenv}

deps =
    pip>=21.1
    gitchangelog @ https://github.com/sarnold/gitchangelog/releases/download/3.2.0/gitchangelog-3.2.0-py3-none-any.whl

commands =
    bash -c 'gitchangelog {posargs} > CHANGELOG.rst'
